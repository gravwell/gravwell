/*************************************************************************
 * Copyright 2020 Gravwell, Inc. All rights reserved.
 * Contact: <legal@gravwell.io>
 *
 * This software may be modified and distributed under the terms of the
 * BSD 2-clause license. See the LICENSE file for details.
 **************************************************************************/

package main

import (
	"fmt"
	"log"
	"net"
	"time"

	"github.com/gravwell/gravwell/v4/ingest"
	"github.com/gravwell/gravwell/v4/ingest/entry"
)

var (
	tags    = []string{"test"}
	targets = []string{"tcp://127.0.0.1:4023"}
	secret  = "IngestSecrets" // set this to the actual ingest secret
)

// Example demonstrates how to write a simple ingester, which generates
// and writes some entries to Gravwell
func main() {
	// Configure the ingester
	ingestConfig := ingest.UniformMuxerConfig{
		Destinations: targets,
		Tags:         tags,
		Auth:         secret,
		PublicKey:    ``,
		PrivateKey:   ``,
		LogLevel:     "WARN",
	}

	// Start the ingester
	igst, err := ingest.NewUniformMuxer(ingestConfig)
	if err != nil {
		log.Fatalf("Failed build our ingest system: %v\n", err)
	}
	defer igst.Close()
	if err := igst.Start(); err != nil {
		log.Fatalf("Failed start our ingest system: %v\n", err)
	}

	// Wait for connection to indexers
	if err := igst.WaitForHot(0); err != nil {
		log.Fatalf("Timedout waiting for backend connections: %v\n", err)
	}

	// Generate and send some entries
	tag, err := igst.GetTag("test")
	if err != nil {
		log.Fatalf("Failed to get tag: %v", err)
	}
	var src net.IP
	if src, err = igst.SourceIP(); err != nil {
		log.Fatalf("failed to get source IP: %v", err)
	}
	for i := 0; i < 100; i++ {
		e := &entry.Entry{
			TS:   entry.Now(),
			SRC:  src,
			Tag:  tag,
			Data: []byte(fmt.Sprintf("test entry %d", i)),
		}
		if err := igst.WriteEntry(e); err != nil {
			log.Printf("Failed to write entry: %v", err)
			break
		}
	}

	// Now shut down
	if err := igst.Sync(time.Second); err != nil {
		log.Printf("Failed to sync: %v", err)
	}
	igst.Close()
}
