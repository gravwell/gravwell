// Code generated by scriggo command. DO NOT EDIT.
//go:build RELEASE
// +build RELEASE

package plugin

import (
	"reflect"

	"github.com/gravwell/gravwell/v3/ingest"
	"github.com/gravwell/gravwell/v3/ingest/config"
	"github.com/gravwell/gravwell/v3/ingest/entry"
	"github.com/open2b/scriggo/native"
)

func initLegacy(packages native.Packages) {
	var decs native.Declarations

	// "github.com/gravwell/gravwell/v3/ingest"
	decs = make(native.Declarations, 177)
	decs["ABSOLUTE_MAX_UNCONFIRMED_WRITES"] = ingest.ABSOLUTE_MAX_UNCONFIRMED_WRITES
	decs["ACK_SIZE"] = ingest.ACK_SIZE
	decs["ACK_WRITER_BUFFER_SIZE"] = ingest.ACK_WRITER_BUFFER_SIZE
	decs["ACK_WRITER_CAN_WRITE"] = ingest.ACK_WRITER_CAN_WRITE
	decs["API_VERSION_MAJOR"] = ingest.API_VERSION_MAJOR
	decs["API_VERSION_MINOR"] = ingest.API_VERSION_MINOR
	decs["API_VER_MAGIC"] = ingest.API_VER_MAGIC
	decs["AuthHash"] = reflect.TypeOf((*ingest.AuthHash)(nil)).Elem()
	decs["BUFFERED_ACK_READER_SIZE"] = ingest.BUFFERED_ACK_READER_SIZE
	decs["CHANNEL_BUFFER"] = ingest.CHANNEL_BUFFER
	decs["CLOSING_SERVICE_ACK_TIMEOUT"] = ingest.CLOSING_SERVICE_ACK_TIMEOUT
	decs["CONFIRM_API_VER_MAGIC"] = ingest.CONFIRM_API_VER_MAGIC
	decs["CONFIRM_ENTRY_MAGIC"] = ingest.CONFIRM_ENTRY_MAGIC
	decs["CONFIRM_ID_MAGIC"] = ingest.CONFIRM_ID_MAGIC
	decs["CONFIRM_INGESTER_STATE_MAGIC"] = ingest.CONFIRM_INGESTER_STATE_MAGIC
	decs["CONFIRM_INGEST_OK_MAGIC"] = ingest.CONFIRM_INGEST_OK_MAGIC
	decs["CONFIRM_TAG_MAGIC"] = ingest.CONFIRM_TAG_MAGIC
	decs["CacheModeAlways"] = native.UntypedStringConst("always")
	decs["CacheModeFail"] = native.UntypedStringConst("fail")
	decs["Challenge"] = reflect.TypeOf((*ingest.Challenge)(nil)).Elem()
	decs["ChallengeResponse"] = reflect.TypeOf((*ingest.ChallengeResponse)(nil)).Elem()
	decs["CheckTag"] = ingest.CheckTag
	decs["CircularIndex"] = reflect.TypeOf((*ingest.CircularIndex)(nil)).Elem()
	decs["CompressNone"] = ingest.CompressNone
	decs["CompressSnappy"] = ingest.CompressSnappy
	decs["CompressionType"] = reflect.TypeOf((*ingest.CompressionType)(nil)).Elem()
	decs["ConnectionType"] = ingest.ConnectionType
	decs["DEFAULT_CLEAR_PORT"] = ingest.DEFAULT_CLEAR_PORT
	decs["DEFAULT_PIPE_PATH"] = ingest.DEFAULT_PIPE_PATH
	decs["DEFAULT_TLS_PORT"] = ingest.DEFAULT_TLS_PORT
	decs["DIAL_TIMEOUT"] = ingest.DIAL_TIMEOUT
	decs["ERROR_TAG_MAGIC"] = ingest.ERROR_TAG_MAGIC
	decs["EnableKeepAlive"] = ingest.EnableKeepAlive
	decs["EntryBuffer"] = reflect.TypeOf((*ingest.EntryBuffer)(nil)).Elem()
	decs["EntryReader"] = reflect.TypeOf((*ingest.EntryReader)(nil)).Elem()
	decs["EntryReaderWriterConfig"] = reflect.TypeOf((*ingest.EntryReaderWriterConfig)(nil)).Elem()
	decs["EntryWriter"] = reflect.TypeOf((*ingest.EntryWriter)(nil)).Elem()
	decs["ErrAllConnsDown"] = &ingest.ErrAllConnsDown
	decs["ErrBadTagCharacter"] = &ingest.ErrBadTagCharacter
	decs["ErrConnectionTimeout"] = &ingest.ErrConnectionTimeout
	decs["ErrEmergencyListOverflow"] = &ingest.ErrEmergencyListOverflow
	decs["ErrEmptyAuth"] = &ingest.ErrEmptyAuth
	decs["ErrEmptyConfigBlock"] = &ingest.ErrEmptyConfigBlock
	decs["ErrEmptyTag"] = &ingest.ErrEmptyTag
	decs["ErrFailedAuth"] = &ingest.ErrFailedAuth
	decs["ErrFailedAuthHashGen"] = &ingest.ErrFailedAuthHashGen
	decs["ErrFailedParseLocalIP"] = &ingest.ErrFailedParseLocalIP
	decs["ErrFailedTagNegotiation"] = &ingest.ErrFailedTagNegotiation
	decs["ErrForbiddenTag"] = &ingest.ErrForbiddenTag
	decs["ErrInvalidAuthVersion"] = &ingest.ErrInvalidAuthVersion
	decs["ErrInvalidBuffer"] = &ingest.ErrInvalidBuffer
	decs["ErrInvalidCerts"] = &ingest.ErrInvalidCerts
	decs["ErrInvalidConnectionType"] = &ingest.ErrInvalidConnectionType
	decs["ErrInvalidCount"] = &ingest.ErrInvalidCount
	decs["ErrInvalidDest"] = &ingest.ErrInvalidDest
	decs["ErrInvalidEntry"] = &ingest.ErrInvalidEntry
	decs["ErrInvalidIngestStateHeader"] = &ingest.ErrInvalidIngestStateHeader
	decs["ErrInvalidRemoteKeySize"] = &ingest.ErrInvalidRemoteKeySize
	decs["ErrInvalidSecret"] = &ingest.ErrInvalidSecret
	decs["ErrInvalidStateResponseLen"] = &ingest.ErrInvalidStateResponseLen
	decs["ErrInvalidTagRequestLen"] = &ingest.ErrInvalidTagRequestLen
	decs["ErrInvalidTagResponseLen"] = &ingest.ErrInvalidTagResponseLen
	decs["ErrInvalidTenantName"] = &ingest.ErrInvalidTenantName
	decs["ErrMalformedDestination"] = &ingest.ErrMalformedDestination
	decs["ErrNilChallengeResponse"] = &ingest.ErrNilChallengeResponse
	decs["ErrNoTargets"] = &ingest.ErrNoTargets
	decs["ErrNotReady"] = &ingest.ErrNotReady
	decs["ErrNotRunning"] = &ingest.ErrNotRunning
	decs["ErrOversizedConfigBlock"] = &ingest.ErrOversizedConfigBlock
	decs["ErrOversizedEntry"] = &ingest.ErrOversizedEntry
	decs["ErrOversizedTag"] = &ingest.ErrOversizedTag
	decs["ErrShortRead"] = &ingest.ErrShortRead
	decs["ErrShortWrite"] = &ingest.ErrShortWrite
	decs["ErrSyncTimeout"] = &ingest.ErrSyncTimeout
	decs["ErrTagMapInvalid"] = &ingest.ErrTagMapInvalid
	decs["ErrTagNotFound"] = &ingest.ErrTagNotFound
	decs["ErrTenantAuthUnsupported"] = &ingest.ErrTenantAuthUnsupported
	decs["ErrTimeout"] = &ingest.ErrTimeout
	decs["ErrUnderFill"] = &ingest.ErrUnderFill
	decs["ErrWriteTimeout"] = &ingest.ErrWriteTimeout
	decs["FORBIDDEN_TAG_SET"] = ingest.FORBIDDEN_TAG_SET
	decs["FORCE_ACK_MAGIC"] = ingest.FORCE_ACK_MAGIC
	decs["G"] = native.UntypedNumericConst("1000000000.0")
	decs["GB"] = ingest.GB
	decs["GenAuthHash"] = ingest.GenAuthHash
	decs["GenerateResponse"] = ingest.GenerateResponse
	decs["HASH_ITERATIONS"] = ingest.HASH_ITERATIONS
	decs["HumanCount"] = ingest.HumanCount
	decs["HumanEntryRate"] = ingest.HumanEntryRate
	decs["HumanLineRate"] = ingest.HumanLineRate
	decs["HumanRate"] = ingest.HumanRate
	decs["HumanSize"] = ingest.HumanSize
	decs["ID_MAGIC"] = ingest.ID_MAGIC
	decs["INGESTER_STATE_MAGIC"] = ingest.INGESTER_STATE_MAGIC
	decs["INGEST_OK_MAGIC"] = ingest.INGEST_OK_MAGIC
	decs["INVALID_MAGIC"] = ingest.INVALID_MAGIC
	decs["IngestCommand"] = reflect.TypeOf((*ingest.IngestCommand)(nil)).Elem()
	decs["IngestConnection"] = reflect.TypeOf((*ingest.IngestConnection)(nil)).Elem()
	decs["IngestLogger"] = reflect.TypeOf((*ingest.IngestLogger)(nil)).Elem()
	decs["IngestMuxer"] = reflect.TypeOf((*ingest.IngestMuxer)(nil)).Elem()
	decs["IngesterState"] = reflect.TypeOf((*ingest.IngesterState)(nil)).Elem()
	decs["IngesterStateCallback"] = reflect.TypeOf((*ingest.IngesterStateCallback)(nil)).Elem()
	decs["InitializeConnection"] = ingest.InitializeConnection
	decs["K"] = native.UntypedNumericConst("1000.0")
	decs["KB"] = ingest.KB
	decs["LockedSource"] = reflect.TypeOf((*ingest.LockedSource)(nil)).Elem()
	decs["Logger"] = reflect.TypeOf((*ingest.Logger)(nil)).Elem()
	decs["M"] = native.UntypedNumericConst("1000000.0")
	decs["MAX_ENTRY_SIZE"] = ingest.MAX_ENTRY_SIZE
	decs["MAX_TAG_LENGTH"] = ingest.MAX_TAG_LENGTH
	decs["MAX_UNCONFIRMED_COUNT"] = ingest.MAX_UNCONFIRMED_COUNT
	decs["MAX_WRITE_ERROR"] = ingest.MAX_WRITE_ERROR
	decs["MB"] = ingest.MB
	decs["MINIMUM_DYN_CONFIG_VERSION"] = ingest.MINIMUM_DYN_CONFIG_VERSION
	decs["MINIMUM_ID_VERSION"] = ingest.MINIMUM_ID_VERSION
	decs["MINIMUM_INGEST_EV_VERSION"] = ingest.MINIMUM_INGEST_EV_VERSION
	decs["MINIMUM_INGEST_OK_VERSION"] = ingest.MINIMUM_INGEST_OK_VERSION
	decs["MINIMUM_INGEST_STATE_VERSION"] = ingest.MINIMUM_INGEST_STATE_VERSION
	decs["MINIMUM_TAG_RENEGOTIATE_VERSION"] = ingest.MINIMUM_TAG_RENEGOTIATE_VERSION
	decs["MIN_REMOTE_KEYSIZE"] = ingest.MIN_REMOTE_KEYSIZE
	decs["MaxTenantNameLength"] = ingest.MaxTenantNameLength
	decs["MinTenantAuthVersion"] = ingest.MinTenantAuthVersion
	decs["MuxerConfig"] = reflect.TypeOf((*ingest.MuxerConfig)(nil)).Elem()
	decs["NEW_ENTRY_MAGIC"] = ingest.NEW_ENTRY_MAGIC
	decs["NewChallenge"] = ingest.NewChallenge
	decs["NewCircularIndex"] = ingest.NewCircularIndex
	decs["NewEntryBuffer"] = ingest.NewEntryBuffer
	decs["NewEntryReader"] = ingest.NewEntryReader
	decs["NewEntryReaderEx"] = ingest.NewEntryReaderEx
	decs["NewEntryWriter"] = ingest.NewEntryWriter
	decs["NewEntryWriterEx"] = ingest.NewEntryWriterEx
	decs["NewIngestMuxer"] = ingest.NewIngestMuxer
	decs["NewIngestMuxerExt"] = ingest.NewIngestMuxerExt
	decs["NewInsecureRNG"] = ingest.NewInsecureRNG
	decs["NewLockedSource"] = ingest.NewLockedSource
	decs["NewMuxer"] = ingest.NewMuxer
	decs["NewPipeConnection"] = ingest.NewPipeConnection
	decs["NewRNG"] = ingest.NewRNG
	decs["NewTCPConnection"] = ingest.NewTCPConnection
	decs["NewTLSConnection"] = ingest.NewTLSConnection
	decs["NewUniformIngestMuxer"] = ingest.NewUniformIngestMuxer
	decs["NewUniformIngestMuxerExt"] = ingest.NewUniformIngestMuxerExt
	decs["NewUniformMuxer"] = ingest.NewUniformMuxer
	decs["NoLogger"] = ingest.NoLogger
	decs["NsPerSec"] = ingest.NsPerSec
	decs["P"] = native.UntypedNumericConst("1000000000000.0")
	decs["PB"] = ingest.PB
	decs["PING_MAGIC"] = ingest.PING_MAGIC
	decs["PONG_MAGIC"] = ingest.PONG_MAGIC
	decs["ParseCompression"] = ingest.ParseCompression
	decs["PrintVersion"] = ingest.PrintVersion
	decs["READ_BUFFER_SIZE"] = ingest.READ_BUFFER_SIZE
	decs["READ_ENTRY_HEADER_SIZE"] = ingest.READ_ENTRY_HEADER_SIZE
	decs["RemapTag"] = ingest.RemapTag
	decs["STATE_AUTHENTICATED"] = ingest.STATE_AUTHENTICATED
	decs["STATE_HOT"] = ingest.STATE_HOT
	decs["STATE_NOT_AUTHENTICATED"] = ingest.STATE_NOT_AUTHENTICATED
	decs["SecureSeed"] = ingest.SecureSeed
	decs["StateResponse"] = reflect.TypeOf((*ingest.StateResponse)(nil)).Elem()
	decs["StreamConfiguration"] = reflect.TypeOf((*ingest.StreamConfiguration)(nil)).Elem()
	decs["SystemTenant"] = ingest.SystemTenant
	decs["T"] = native.UntypedNumericConst("1000000000000.0")
	decs["TAG_MAGIC"] = ingest.TAG_MAGIC
	decs["TB"] = ingest.TB
	decs["THROTTLE_MAGIC"] = ingest.THROTTLE_MAGIC
	decs["TLSCerts"] = reflect.TypeOf((*ingest.TLSCerts)(nil)).Elem()
	decs["TagManager"] = reflect.TypeOf((*ingest.TagManager)(nil)).Elem()
	decs["TagRequest"] = reflect.TypeOf((*ingest.TagRequest)(nil)).Elem()
	decs["TagResponse"] = reflect.TypeOf((*ingest.TagResponse)(nil)).Elem()
	decs["Target"] = reflect.TypeOf((*ingest.Target)(nil)).Elem()
	decs["TargetError"] = reflect.TypeOf((*ingest.TargetError)(nil)).Elem()
	decs["UniformMuxerConfig"] = reflect.TypeOf((*ingest.UniformMuxerConfig)(nil)).Elem()
	decs["VERSION"] = ingest.VERSION
	decs["VerifyResponse"] = ingest.VerifyResponse
	decs["WRITE_BUFFER_SIZE"] = ingest.WRITE_BUFFER_SIZE
	decs["Y"] = native.UntypedNumericConst("1000000000000000.0")
	decs["YB"] = ingest.YB
	packages["github.com/gravwell/gravwell/v3/ingest"] = native.Package{
		Name:         "ingest",
		Declarations: decs,
	}
	// "github.com/gravwell/gravwell/v3/ingest/config"
	decs = make(native.Declarations, 41)
	decs["AppendDefaultPort"] = config.AppendDefaultPort
	decs["CACHE_DEPTH_DEFAULT"] = native.UntypedNumericConst("128")
	decs["CACHE_MODE_DEFAULT"] = native.UntypedStringConst("always")
	decs["CACHE_SIZE_DEFAULT"] = native.UntypedNumericConst("1000")
	decs["CustomTimeFormat"] = reflect.TypeOf((*config.CustomTimeFormat)(nil)).Elem()
	decs["DefaultCleartextPort"] = config.DefaultCleartextPort
	decs["DefaultTLSPort"] = config.DefaultTLSPort
	decs["ErrBadMap"] = &config.ErrBadMap
	decs["ErrBadValue"] = &config.ErrBadValue
	decs["ErrConfigFileTooLarge"] = &config.ErrConfigFileTooLarge
	decs["ErrConfigNotOpen"] = &config.ErrConfigNotOpen
	decs["ErrEmptyEnvFile"] = &config.ErrEmptyEnvFile
	decs["ErrFailedFileRead"] = &config.ErrFailedFileRead
	decs["ErrGlobalSectionNotFound"] = &config.ErrGlobalSectionNotFound
	decs["ErrInvalidArg"] = &config.ErrInvalidArg
	decs["ErrInvalidArgument"] = &config.ErrInvalidArgument
	decs["ErrInvalidConnectionTimeout"] = &config.ErrInvalidConnectionTimeout
	decs["ErrInvalidImportInterface"] = &config.ErrInvalidImportInterface
	decs["ErrInvalidImportParameter"] = &config.ErrInvalidImportParameter
	decs["ErrInvalidLineLocation"] = &config.ErrInvalidLineLocation
	decs["ErrInvalidLogLevel"] = &config.ErrInvalidLogLevel
	decs["ErrInvalidMapKeyType"] = &config.ErrInvalidMapKeyType
	decs["ErrInvalidMapValueType"] = &config.ErrInvalidMapValueType
	decs["ErrInvalidUpdateLineParameter"] = &config.ErrInvalidUpdateLineParameter
	decs["ErrIsNotDirectory"] = &config.ErrIsNotDirectory
	decs["ErrMissingIngestSecret"] = &config.ErrMissingIngestSecret
	decs["ErrNoConnections"] = &config.ErrNoConnections
	decs["ErrNotFound"] = &config.ErrNotFound
	decs["IngestConfig"] = reflect.TypeOf((*config.IngestConfig)(nil)).Elem()
	decs["IngestStreamConfig"] = reflect.TypeOf((*config.IngestStreamConfig)(nil)).Elem()
	decs["LoadConfigBytes"] = config.LoadConfigBytes
	decs["LoadConfigFile"] = config.LoadConfigFile
	decs["LoadConfigOverlays"] = config.LoadConfigOverlays
	decs["LoadEnvVar"] = config.LoadEnvVar
	decs["ParseBool"] = config.ParseBool
	decs["ParseInt64"] = config.ParseInt64
	decs["ParseRate"] = config.ParseRate
	decs["ParseSource"] = config.ParseSource
	decs["ParseUint64"] = config.ParseUint64
	decs["TimeFormat"] = reflect.TypeOf((*config.TimeFormat)(nil)).Elem()
	decs["VariableConfig"] = reflect.TypeOf((*config.VariableConfig)(nil)).Elem()
	packages["github.com/gravwell/gravwell/v3/ingest/config"] = native.Package{
		Name:         "config",
		Declarations: decs,
	}
	// "github.com/gravwell/gravwell/v3/ingest/entry"
	decs = make(native.Declarations, 90)
	decs["BoolEnumData"] = entry.BoolEnumData
	decs["ByteEnumData"] = entry.ByteEnumData
	decs["DecodeEVBlockHeader"] = entry.DecodeEVBlockHeader
	decs["DecodeHeader"] = entry.DecodeHeader
	decs["DecodeHeaderTagSec"] = entry.DecodeHeaderTagSec
	decs["DecodePartialHeader"] = entry.DecodePartialHeader
	decs["DefaultTagId"] = entry.DefaultTagId
	decs["DefaultTagName"] = &entry.DefaultTagName
	decs["DurationEnumData"] = entry.DurationEnumData
	decs["ENTRY_HEADER_SIZE"] = entry.ENTRY_HEADER_SIZE
	decs["EVBlock"] = reflect.TypeOf((*entry.EVBlock)(nil)).Elem()
	decs["EVBlockHeader"] = reflect.TypeOf((*entry.EVBlockHeader)(nil)).Elem()
	decs["EVBlockHeaderLen"] = native.UntypedNumericConst("8")
	decs["Entry"] = reflect.TypeOf((*entry.Entry)(nil)).Elem()
	decs["EntryBlock"] = reflect.TypeOf((*entry.EntryBlock)(nil)).Elem()
	decs["EntryBlockHeaderSize"] = native.UntypedNumericConst("16")
	decs["EntryKey"] = reflect.TypeOf((*entry.EntryKey)(nil)).Elem()
	decs["EntrySize"] = entry.EntrySize
	decs["EntrySlice"] = reflect.TypeOf((*entry.EntrySlice)(nil)).Elem()
	decs["EntryTag"] = reflect.TypeOf((*entry.EntryTag)(nil)).Elem()
	decs["EnumeratedData"] = reflect.TypeOf((*entry.EnumeratedData)(nil)).Elem()
	decs["EnumeratedValue"] = reflect.TypeOf((*entry.EnumeratedValue)(nil)).Elem()
	decs["ErrBadKey"] = &entry.ErrBadKey
	decs["ErrBlockTooLarge"] = &entry.ErrBlockTooLarge
	decs["ErrCorruptedEnumeratedValue"] = &entry.ErrCorruptedEnumeratedValue
	decs["ErrDataSizeTooLarge"] = &entry.ErrDataSizeTooLarge
	decs["ErrEnumeratedValueBlockCorrupt"] = &entry.ErrEnumeratedValueBlockCorrupt
	decs["ErrEnumeratedValueBlockInvalidCount"] = &entry.ErrEnumeratedValueBlockInvalidCount
	decs["ErrEnumeratedValueBlockInvalidSize"] = &entry.ErrEnumeratedValueBlockInvalidSize
	decs["ErrFailedBodyRead"] = &entry.ErrFailedBodyRead
	decs["ErrFailedBodyWrite"] = &entry.ErrFailedBodyWrite
	decs["ErrFailedHeaderWrite"] = &entry.ErrFailedHeaderWrite
	decs["ErrInvalid"] = &entry.ErrInvalid
	decs["ErrInvalidBufferSize"] = &entry.ErrInvalidBufferSize
	decs["ErrInvalidDestBuff"] = &entry.ErrInvalidDestBuff
	decs["ErrInvalidEntryBlock"] = &entry.ErrInvalidEntryBlock
	decs["ErrInvalidEnumeratedData"] = &entry.ErrInvalidEnumeratedData
	decs["ErrInvalidHeader"] = &entry.ErrInvalidHeader
	decs["ErrInvalidKey"] = &entry.ErrInvalidKey
	decs["ErrInvalidName"] = &entry.ErrInvalidName
	decs["ErrInvalidSrcBuff"] = &entry.ErrInvalidSrcBuff
	decs["ErrKeyAlreadySet"] = &entry.ErrKeyAlreadySet
	decs["ErrNilEntry"] = &entry.ErrNilEntry
	decs["ErrPartialDecode"] = &entry.ErrPartialDecode
	decs["ErrSliceLenTooLarge"] = &entry.ErrSliceLenTooLarge
	decs["ErrSliceSizeTooLarge"] = &entry.ErrSliceSizeTooLarge
	decs["ErrTSDataSizeInvalid"] = &entry.ErrTSDataSizeInvalid
	decs["ErrTruncatedEnumeratedValue"] = &entry.ErrTruncatedEnumeratedValue
	decs["ErrUnknownType"] = &entry.ErrUnknownType
	decs["Float32EnumData"] = entry.Float32EnumData
	decs["Float64EnumData"] = entry.Float64EnumData
	decs["FromStandard"] = entry.FromStandard
	decs["GravwellTagId"] = entry.GravwellTagId
	decs["GravwellTagName"] = &entry.GravwellTagName
	decs["IPEnumData"] = entry.IPEnumData
	decs["IPV4_SRC_SIZE"] = entry.IPV4_SRC_SIZE
	decs["InferEnumeratedData"] = entry.InferEnumeratedData
	decs["Int16EnumData"] = entry.Int16EnumData
	decs["Int32EnumData"] = entry.Int32EnumData
	decs["Int64EnumData"] = entry.Int64EnumData
	decs["Int8EnumData"] = entry.Int8EnumData
	decs["IntEnumData"] = entry.IntEnumData
	decs["MACEnumData"] = entry.MACEnumData
	decs["MaxDataSize"] = entry.MaxDataSize
	decs["MaxEvBlockCount"] = native.UntypedNumericConst("65535")
	decs["MaxEvBlockSize"] = native.UntypedNumericConst("33554432")
	decs["MaxEvDataLength"] = native.UntypedNumericConst("64503")
	decs["MaxEvNameLength"] = native.UntypedNumericConst("1024")
	decs["MaxEvSize"] = native.UntypedNumericConst("65535")
	decs["MaxSliceCount"] = entry.MaxSliceCount
	decs["NewDeepCopyEntryBlock"] = entry.NewDeepCopyEntryBlock
	decs["NewEntryBlock"] = entry.NewEntryBlock
	decs["NewEntryBlockNP"] = entry.NewEntryBlockNP
	decs["NewEnumeratedData"] = entry.NewEnumeratedData
	decs["NewEnumeratedValue"] = entry.NewEnumeratedValue
	decs["Now"] = entry.Now
	decs["RawEnumeratedData"] = entry.RawEnumeratedData
	decs["SRC_SIZE"] = entry.SRC_SIZE
	decs["Since"] = entry.Since
	decs["SliceEnumData"] = entry.SliceEnumData
	decs["StringEnumData"] = entry.StringEnumData
	decs["StringEnumDataTail"] = entry.StringEnumDataTail
	decs["TSEnumData"] = entry.TSEnumData
	decs["TS_SIZE"] = entry.TS_SIZE
	decs["Timestamp"] = reflect.TypeOf((*entry.Timestamp)(nil)).Elem()
	decs["Uint16EnumData"] = entry.Uint16EnumData
	decs["Uint32EnumData"] = entry.Uint32EnumData
	decs["Uint64EnumData"] = entry.Uint64EnumData
	decs["UintEnumData"] = entry.UintEnumData
	decs["UnixTime"] = entry.UnixTime
	packages["github.com/gravwell/gravwell/v3/ingest/entry"] = native.Package{
		Name:         "entry",
		Declarations: decs,
	}
}
