[Global]
Ingest-Secret = "IngestSecrets"
Connection-Timeout = 0
Verify-Remote-Certificates = true
#Cleartext-Backend-Target=127.0.0.1:4023 #example of adding a cleartext connection
#Cleartext-Backend-Target=127.1.0.1:4023 #example of adding another cleartext connection
#Encrypted-Backend-Target=127.1.1.1:4023 #example of adding an encrypted connection
Pipe-Backend-Target=/opt/gravwell/comms/pipe #a named pipe connection, this should be used when ingester is on the same machine as a backend
Log-Level=INFO #options are OFF INFO WARN ERROR
Log-File=/opt/gravwell/log/azure_event_hubs.log
#Ingest-Cache-Path=/opt/gravwell/cache/azure_event_hubs.cache #allows for ingested entries to be cached when indexer is not available

[EventHub "gravwell"]
	# The event hub namespace which contains the hub you want to ingest
	Event-Hubs-Namespace=gravwellEventHub
	# The name of the hub within the namespace you wish to ingest
	Event-Hub=ingester_testing
	# The name of the shared access policy to use (must have Listen permissions)
	Token-Name=gravwell_ingest_policy
	# The primary key of your shared access policy (this is a sample key only)
	Token-Key=`pND0cTMvW/gpTf0wkIgcquaHPonL7VVIkrtrB1HAnz0=`
	# If Initial-Checkpoint is "start", the ingester will begin reading all available events.
	# If Initial-Checkpoint is "end", the ingester will only read entries which are created since the ingester started.
	Initial-Checkpoint="start"
	# The tag into which we will ingest
	Tag-Name=eventhub
	# If Parse-Time is false, the ingester will use the EnqueuedTime of the event as the timestamp
	# If Parse-Time is true, the ingester will attempt to extract a timestamp from the body of the event.
	Parse-Time=false
	Assume-Local-Timezone=true
